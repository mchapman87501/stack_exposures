name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # See https://github.com/docker/build-push-action/blob/master/docs/advanced/share-image-jobs.md
  # and https://stackoverflow.com/a/69324657/2826337
  build_docker_image:
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    -
      name: Build and export
      uses: docker/build-push-action@v3
      with:
        context: .
        tags: build_stack_exposures:latest
        outputs: type=docker,dest=/tmp/build_stack_exposures.tar
    -
      name: Upload image
      uses: actions/upload-artifact@v3
      with:
        name: build_stack_exposures
        path: /tmp/build_stack_exposures.tar

    - name: Generate docker name:tag
      run: echo "name_tag=build_stack_exposures:$(date +%s)" >> $GITHUB_ENV

  compile_stack_exposures:
    runs-on: ubuntu-latest
    needs: build_docker_image
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    - 
      name: Checkout submodules
      run: |
        git submodule init
        git submodule update
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    -
      name: Download image
      uses: actions/download-artifact@v3
      with:
        name: build_stack_exposures
        path: /tmp
    -
      name: Load image
      run: |
        docker load --input /tmp/build_stack_exposures.tar
        docker image ls -a
    -
      name: Build stack_exposures using Docker
      run: |
        mkdir -p build_artifacts
        docker run --rm -v${PWD}:/source --user root build_stack_exposures:latest
    -
      name: Run coverage tests
      run: |
        docker run --rm -v${PWD}:/source --user root build_stack_exposures:latest "/source/docker_scripts/in_container/test.sh"
    -
      name: Archive artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: build_artifacts